version: '3.2'

services:
  elasticsearch01:
    container_name: elasticsearch01
    build:
      context: elasticsearch01/
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: ./elasticsearch01/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch01
        target: /usr/share/elasticsearch/data
    networks:
      - elk
  
  elasticsearch02:
    container_name: elasticsearch02
    build:
      context: elasticsearch02/
      args:
        ELK_VERSION: $ELK_VERSION
    # ports:
    #   - "9200:9200"

    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: ./elasticsearch02/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch02
        target: /usr/share/elasticsearch/data
    networks:
      - elk

  elasticsearch03:
    container_name: elasticsearch03
    build:
      context: elasticsearch03/
      args:
        ELK_VERSION: $ELK_VERSION
    # ports:
    #   - "9300:9200"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: ./elasticsearch03/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch03
        target: /usr/share/elasticsearch/data
    networks:
      - elk

  # logstash:
  #   build:
  #     context: logstash/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./logstash/config/logstash.yml
  #       target: /usr/share/logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ./logstash/pipeline
  #       target: /usr/share/logstash/pipeline
  #       read_only: true
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   build:
  #     context: kibana/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./kibana/config/kibana.yml
  #       target: /usr/share/kibana/config/kibana.yml
  #       read_only: true
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch01

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch01:
    driver: local
  elasticsearch02:
    driver: local
  elasticsearch03: 
    driver: local
